openapi: 3.0.3
info:
  title: Swagger TechForLife - OpenAPI 3.0
  description: |-
    APIs to intgerate to make use TechForLife
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: http://localhost:8080/v1
tags:
  - name: producer
    description: Everything about Producer
    externalDocs:
      description: Find out more
      url: http://swagger.io
paths:
  /producer:
    post:
      tags:
        - producer
      summary: Onboard new Producer - Address, Domain (meal/grocerry/bakery)
      description: Onboard new Producer
      operationId: onboardProducer
      requestBody:
        description: Onboard new Producer
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Producer'
          application/xml:
            schema:
              $ref: '#/components/schemas/Producer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Producer'
        required: true
      responses:
        '201':
          description: New Prodicer Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Producer'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Producer'
        '405':
          description: Invalid input
      security:
        - petstore_auth:
            - write:pets
            - read:pets
    get:
      tags:
        - producer
      summary: Get all producers
      description: 'Get all producers'
      operationId: getAllProducers
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Producers'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Producers'
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
  /producer/search:    
    get:
          tags:
            - producer
          summary: Serarch producers
          description: 'Serarch producers'
          operationId: searchProducers
          parameters:
            - name: name
              in: query
              description: Name of the producers
              required: false
              schema:
                type: string
            - name: street
              in: query
              description: Exact Street address of the producers
              required: false
              schema:
                type: string  
            - name: city
              in: query
              description: Exact city of the producers
              required: false
              schema:
                type: string 
            - name: organizationNumber
              in: query
              description: organization numner of producer
              required: false
              schema:
                type: string                                         

          responses:
            '200':
              description: successful operation
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/Producers'          
                application/xml:
                  schema:
                    $ref: '#/components/schemas/Producers'
            '400':
              description: Invalid username supplied
            '404':
              description: User not found

  /producer/{id}:    
    get:
      tags:
        - producer
      summary: Get Producer by producer id
      description: ''
      operationId: getProducerById
      parameters:
        - name: id
          in: path
          description: 'Producer unique identifier '
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Producer'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Producer'
        '400':
          description: Invalid producer id supplied
        '404':
          description: Producer not found            

    put:
      tags:
        - producer
      summary: Update producer with given id
      description: 'Update producer with given id'
      operationId: updateProducerById
      parameters:
        - name: id
          in: path
          description: 'Producer unique identifier '
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Producer'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Producer'
        '400':
          description: Invalid producer id supplied
        '404':
          description: Producer not found

    delete:
      tags:
        - producer
      summary: Delete producer with given id
      description: 'Delete producer with given id'
      operationId: deleteProducerById
      parameters:
        - name: id
          in: path
          description: 'Producer unique identifier '
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Producer'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Producer'
        '400':
          description: Invalid producer id supplied
        '404':
          description: Producer not found
components:
  schemas:
    Producers :
      type: array
      items : 
        type : object
        $ref: '#/components/schemas/Producer' 
    Producer :
      type: object
      properties :
        id : 
          type: integer
          format: int64
          example: 10000
        name : 
          type: string
          example: fehguy
        address : 
          type: object
          $ref: '#/components/schemas/Address' 
        officialRegistrationNumber:
          type: integer
          format: int64
          example: 123456789
        onboardingStartDate :
          type: string
          format: date
        onboardingEndDate :
          type: string
          format: date
        phoneNumber:
          type: integer
          format: int64
          example: 12345678
    Address:
      type: object
      properties:
        street:
          type: string
          example: 437 Lytton
        city:
          type: string
          example: Palo Alto
        postalcode:
          type: string
          example: '94301'

